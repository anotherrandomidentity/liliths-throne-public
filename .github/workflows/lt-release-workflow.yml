name: LT Release


on:
    #push:
    release:
        types: [published]

env:
    DEBUG: true
    lt_base_filename: liliths-throne
    lt_tag: ${{ github.event.release.tag_name }}
    lt_filename: liliths-throne-${{ github.event.release.tag_name }}

jobs:


    build:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v2

            # Set up environment variables needed down the line
            -   name: Set Environment Variables
                run: echo asdf

            # works with "java-version: 1.8", but let's be specific ... just in case
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 8.0.192
                    java-package: jdk+fx

            # Build LT
            -   name: Build LT (via Maven)
                run: mvn -B package --file pom.xml

            # Remove unnecessary files leftover from build; Rename game-1.jar to liliths-throne-<version>.jar
            -   name: Clean Up Build Files
                env:
                    LT_JAR_FILENAME: ${{ env.lt_filename }}.jar
                run: |
                    rm -rf target/classes
                    rm -rf target/generated-sources
                    rm -rf target/maven-archiver
                    mv target/game-1.jar target/${{ env.LT_JAR_FILENAME }}

            # Upload liliths-throne-<version>.jar
            -   name: Upload Release Assest (JAR only)
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    LT_JAR_FILENAME: ${{ env.lt_filename }}.jar
                with:
                    upload_url: ${{ github.event.release.upload_url }}
                    asset_path: target/${{ env.LT_JAR_FILENAME }}
                    asset_name: ${{ env.LT_JAR_FILENAME }}
                    asset_content_type: application/zip

            # Rename /target to /liliths-throne, then zip it all up
            -   name: Zip Release Asset
                env:
                    LT_ZIP_FILENAME: ${{ env.lt_filename }}.zip
                run: |
                    mv target $ {{ env.lt_base_filename }}
                    zip -r ${{ env.LT_ZIP_FILENAME }} ${{ env.lt_base_filename }}

            # Upload liliths-throne-<version>.zip (Complete with /res)
            -   name: Upload Release Asset (ZIP, complete)
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    LT_ZIP_FILENAME: ${{ env.lt_filename }}.zip
                with:
                    upload_url: ${{ github.event.release.upload_url }}
                    asset_path: target/${{ env.LT_ZIP_FILENAME }}
                    asset_name: ${{ env.LT_ZIP_FILENAME }}
                    asset_content_type: application/zip

            # Generate checksums
            -   name: Generate Checksums
                env:
                    LT_JAR_FILENAME: ${{ env.lt_filename }}.jar
                    LT_ZIP_FILENAME: ${{ env.lt_filename }}.zip
                    LT_MD5_FILENAME: md5-checksums.txt
                run: |
                    md5 target/${{ env.LT_JAR_FILENAME }} > ${{ env.LT_MD5_FILENAME }}
                    md5 target/${{ env.LT_ZIP_FILENAME }} >> ${{ env.LT_MD5_FILENAME }}

            # Upload checksums
            -   name: Upload MD5 Checksums Asset
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    LT_MD5_FILENAME: md5-checksums.txt
                with:
                    upload_url: ${{ github.event.release.upload_url }}
                    asset_path: target/${{ env.LT_MD5_FILENAME }}
                    asset_name: ${{ env.LT_MD5_FILENAME }}
                    asset_content_type: application/zip

